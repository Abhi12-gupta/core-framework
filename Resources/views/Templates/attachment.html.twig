<style>
    input.attachment {
        display: none;
    }
</style>
<script type="text/javascript">
    $(function () {
        var FileView = Backbone.View.extend({
            fileCounter: 0,
            maxFileSize: 2097152,
            maxFileLimit: 20,
            el: '.attachment-block',
            events : {
                'click .uv-file-label': 'createFileType',
                'change .attachment': 'selectFile',
                'click .uv-added-attachment span': 'removeFile'
            },
            initialize: function() {
                $.get("{{path("uvdesk_get_ini_parameter", {'parameter': 'upload_max_filesize'})}}")
                    .then(response => {
                        switch(response['upload_max_filesize'][(response['upload_max_filesize'].length-1)].toLowerCase()) {
                            case 'm':
                                this.maxFileSize = (Number)(response['upload_max_filesize'].substring(0, response['upload_max_filesize'].length-1)) * 1024 * 1024;
                                break;
                            case 'k':
                                this.maxFileSize = (Number)(response['upload_max_filesize'].substring(0, response['upload_max_filesize'].length-1)) * 1024;
                                break;
                            default:
                                this.maxFileSize = (Number)(response['upload_max_filesize'].substring(0, response['upload_max_filesize'].length-1));
                                break;
                        }
                    });
                $.get("{{path("uvdesk_get_ini_parameter", {'parameter': 'max_file_uploads'})}}")
                    .then(response => {
                        this.maxFileLimit = (Number)(response['max_file_uploads']);
                    });
            },
            createFileType: function(e) {
                this.$el.find('.uv-attachment-error').remove();
                currentElement = Backbone.$(e.currentTarget)
                this.fileCounter += 1;
                currentElement.parents('.attachment-block').append('<div class="uv-added-attachment" style="display: none" id="file-' + this.fileCounter + '"><div class="uv-attachment"><input type="file" name="attachments[]" class="attachment" multiple="multiple"></div><span></span></div>')
                $('#file-' + this.fileCounter).find('.attachment').trigger('click')
            },
            labelTemplate: _.template('<label class="file-name"><%- fileName %></label><br>'),
            selectFile: function(e) {
                currentElement = Backbone.$(e.currentTarget)
                var attachmentBlock = currentElement.parents(".uv-added-attachment");
                var isFileSizeError = false;
                if(currentElement.length) {
                    files = currentElement[0].files; 
                    if(files.length) {
                        for (var i = 0; i < files.length; i++) {
                            var filesize = (files[i].size / (1024 * 1024)).toString();
                            var fileName = files[i].name + ' x ' + filesize.substring(0, filesize.indexOf('.') + 3) + 'MB';
                            isFileSizeError = files[i].size > this.maxFileSize ? true : false; 
                            attachmentBlock.append(this.labelTemplate({'fileName': fileName}));
                        }
                    }
                }

                var errorElement = $('<div class="uv-attachment-error"></div>');
                if (isFileSizeError) {
                    errorElement.append('<span class="uv-field-message">File size must not be more than 2MB</span>');
                }
                var isMaxFileLimitError = this.$el.children('.uv-added-attachment').length > this.maxFileLimit ? true : false; 
                if(isMaxFileLimitError) {
                    errorElement.append('<span class="uv-field-message">Only upto ' + this.maxFileLimit + ' files are allowed</span>');
                }
                if (isFileSizeError || isMaxFileLimitError) {
                    this.$el.append(errorElement);
                    attachmentBlock.remove();
                    this.fileCounter -= 1;
                } else {
                    attachmentBlock.show();
                }
            },
            removeFile: function(e) {
                this.$el.find('.uv-attachment-error').remove();
                Backbone.$(e.currentTarget).parents('.uv-added-attachment').remove()
            }
        });
        
        var fileView = new FileView();
    });
</script>